<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2CircleButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>